/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.dsd.simulador.trafego.view;

import com.mycompany.dsd.simulador.trafego.controller.Simulacao;
import com.mycompany.dsd.simulador.trafego.model.Celula;
import com.mycompany.dsd.simulador.trafego.model.Malha;
import com.mycompany.dsd.simulador.trafego.model.TipoCelula;
import com.mycompany.dsd.simulador.trafego.model.Veiculo;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.KeyStroke;
import javax.swing.Timer;

/**
 *
 * @author gitir
 */
public class MalhaPanel extends javax.swing.JPanel {
    
    private final Malha malha;
    private final Simulacao simulacao;
    private final int cellSize = 30;

    /**
     * Creates new form MalhaPanel
     */
    public MalhaPanel(Malha malha, Simulacao simulacao) {
        this.malha = malha;
        this.simulacao = simulacao;

        // Redesenha a cada 200 ms
        new Timer(200, e -> repaint()).start();
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        
        // desenhar malha
        for (int i = 0; i < malha.getLinhas(); i++) {
            for (int j = 0; j < malha.getColunas(); j++) {
                Celula cel = malha.getCelula(i, j);
                g.setColor(cel.getTipo() == TipoCelula.VAZIO ? Color.LIGHT_GRAY : Color.WHITE);
                g.fillRect(j * cellSize, i * cellSize, cellSize, cellSize);
                g.setColor(Color.GRAY);
                g.drawRect(j * cellSize, i * cellSize, cellSize, cellSize);
            }
        }

        // desenhar veÃ­culos
        for (Veiculo v : simulacao.getVeiculos()) {
            if (v.isAtivo()) {
                g.setColor(v.getCor());
                g.fillOval(v.getColuna() * cellSize + 5, v.getLinha() * cellSize + 5,
                           cellSize - 10, cellSize - 10);
            }
        }
    }
    
    @Override
    public Dimension getPreferredSize() {
        return new Dimension(malha.getColunas() * cellSize, malha.getLinhas() * cellSize);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
